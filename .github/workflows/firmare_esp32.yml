name: PlatformIO CI/CD

on:
  push:
    tags:
      - '*'

jobs:
  get_version:
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.set_output.outputs.VERSION }}
    steps:
      - name: Get tag version
        id: get_tag
        run: echo "VERSION=${GITHUB_REF#refs/tags/}" >> $GITHUB_ENV
      - name: Set output
        id: set_output
        run: echo "VERSION=${GITHUB_REF#refs/tags/}" >> $GITHUB_OUTPUT

  build:
    runs-on: ubuntu-latest
    needs: get_version
    steps:
      - uses: actions/checkout@v4
      - uses: actions/cache@v4
        with:
          path: |
            ~/.cache/pip
            ~/.platformio/.cache
          key: ${{ runner.os }}-pio
      - uses: actions/setup-python@v5
        with:
          python-version: '3.11'
      - name: Install PlatformIO Core
        run: pip install --upgrade platformio

      - name: Build PlatformIO Project
        run: pio run

      - name: Upload firmware artifact
        uses: actions/upload-artifact@v4
        with:
          name: firmware
          path: .pio/build/mhetesp32devkit/firmware.bin

  deploy:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Get tag version
        run: echo "VERSION=${{ needs.get_version.outputs.version }}"

      - name: Download firmware artifact
        uses: actions/download-artifact@v4
        with:
          name: firmware
          path: bin_esp32

      - name: Deploy firmware to server
        uses: Gustavo-caetano/sshcloudflareddeploy@1.7
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USERNAME }}
          private_key: ${{ secrets.SSH_PRIVATE_KEY }}
          port: ${{ secrets.SSH_PORT }}
          folder: bin_esp32/firmware/firmware.bin
          target: ${{ secrets.TARGET }}/firmware_${{ needs.get_version.outputs.version }}.bin
          commmand: cd bin_esp32/script ; ./update.sh ${{ needs.get_version.outputs.version }}
